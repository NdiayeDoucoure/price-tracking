<?php

namespace App\Entity;

use Doctrine\ORM\Mapping as ORM;
use App\Repository\ProduitRepository;

#[ORM\Entity(repositoryClass: ProduitRepository::class)]
#[ORM\Table(name: "produit")]
class Produit
{
    #[ORM\Id]
    #[ORM\GeneratedValue]
    #[ORM\Column(type: "integer")]
    private ?int $id = null;

    #[ORM\Column(type: "string", length: 50)]
    private string $nom;

    #[ORM\Column(type: "decimal", precision: 10, scale: 2)]
    private float $prix;

    #[ORM\Column(type: "string", length: 10)]
    private string $categorie;

    #[ORM\ManyToOne(targetEntity: "App\Entity\Marche")]
    #[ORM\JoinColumn(name: "marche_id", referencedColumnName: "id", onDelete: "CASCADE")]
    private ?Marche $marche;

    // Getters et setters
    public function getId(): ?int
    {
        return $this->id;
    }

    public function getNom(): string
    {
        return $this->nom;
    }

    public function setNom(string $nom): self
    {
        $this->nom = $nom;
        return $this;
    }

    public function getPrix(): float
    {
        return $this->prix;
    }

    public function setPrix(float $prix): self
    {
        $this->prix = $prix;
        return $this;
    }

    public function getCategorie(): string
    {
        return $this->categorie;
    }

    public function setCategorie(string $categorie): self
    {
        if (!in_array($categorie, ['légumes', 'fruits', 'céréales'])) {
            throw new \InvalidArgumentException("Catégorie invalide");
        }
        $this->categorie = $categorie;
        return $this;
    }

    public function getMarche(): ?Marche
    {
        return $this->marche;
    }

    public function setMarche(?Marche $marche): self
    {
        $this->marche = $marche;
        return $this;
    }
}
